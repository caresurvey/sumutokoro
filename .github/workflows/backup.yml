name: 本番環境バックアップ

on:
  #push:
  #  branches:
  #    - backup

  schedule:
    #定期実行する時間
    # 時はUTCで指定する。時間差は9時間。02:00はJSTだと11:00
    # 毎日17:00（日本時間02:00）に実行する
    # 実行タイミングは20〜30分のラグが発生する可能性があります
    - cron: '0 8 * * *'

jobs:

  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 下準備
        run: mkdir -p ~/.ssh

      - name: docker-compose準備・起動
        run: |
          rm docker-compose.yml
          cp system/docker/backup/x86/docker-compose.yml ./
          docker-compose up -d

      - name: composerインストール（backup用のcomposer.jsonに切り替えて実行）
        run: |
          rm composer.json
          cp system/docker/backup/composer.json ./
          docker-compose exec -T php sh -c "composer install"

      - name: 本番サーバーにSSH接続するためのkeyとknown_hostsの設定
        run: |
          echo "${{ secrets.SSH_KEY_PRODUCTION }}" > ~/.ssh/secretkey
          echo "${{ secrets.SSH_KEY_BACKUP }}" > ~/.ssh/backup_secretkey
          chmod 600 ~/.ssh/secretkey
          chmod 600 ~/.ssh/backup_secretkey
          ssh-keyscan ${{ secrets.SSH_HOST_PRODUCTION }} >> ~/.ssh/known_hosts
          ssh-keyscan ${{ secrets.SSH_HOST_BACKUP }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY_PRODUCTION }}

      - name: 転送用のディレクトリを作成
        run: |
          mkdir backup

      #- name: デバッグ時にCI内にSSH接続する（通常は使用しないのでコメントアウトすること）
      #  uses: mxschmitt/action-tmate@v1

      - name: バックアップ用のスクリプトファイルを作成
        run: |
          echo '#!/bin/sh'
          echo '# バックアップ用のディレクトリを作成'
          echo 'mkdir backup' >> backup/backup.sh
          echo '# バックアップ用のディレクトリに移動'
          echo 'cd backup' >> backup/backup.sh
          echo '# 本番用DBをdumpする'
          echo 'mysqldump -q --no-tablespaces -u ${{secrets.DB_USER_NAME_PRODUCTION}} -p${{secrets.DB_PASSWORD_PRODUCTION}} -h ${{secrets.DB_HOST_NAME_PRODUCTION}} ${{secrets.DB_NAME_PRODUCTION}} > dump.sql' >> backup/backup.sh
          echo '# dumpしたDBをzip圧縮し、元ファイルを削除する'
          echo 'zip dump.sql.zip dump.sql && rm dump.sql' >> backup/backup.sh
          echo '# データディレクトリをzip圧縮'
          echo 'cd ~/www && zip -r datas.zip datas && mv datas.zip ~/deploy/backup/sumutokoro2022/current/backup/datas.zip && cd ~/deploy/backup/sumutokoro2022/current/backup/' >> backup/backup.sh
          echo '# メールBOXをzip圧縮'
          echo 'cd ~/ && zip -r MailBox.zip MailBox && mv MailBox.zip ~/deploy/backup/sumutokoro2022/current/backup/MailBox.zip && cd ~/deploy/backup/sumutokoro2022/current/backup/' >> backup/backup.sh
          echo '# バックアップ用のディレクトリから出る'
          echo 'cd ../' >> backup/backup.sh
          echo '# バックアップ用のディレクトリをまるごとzip圧縮する'
          echo 'zip -r backup.zip backup' >> backup/backup.sh
          echo '# バックアップディレクトリを削除する'
          echo 'rm -R backup' >> backup/backup.sh
          echo '# バックアップスクリプト（このファイル自身）を削除する'
          echo 'rm backup.sh' >> backup/backup.sh

      - name: deployerのファイルを配置
        run: |
          cp system/deployer/backup.php ./deploy.php

      - name: 本番サーバーでバックアップを行う（deployer7系／deploy.php）
        run: ./vendor/bin/dep backup production -vvvv

      - name: 本番サーバーからバックアップデータをダウンロードする
        run: scp -i ~/.ssh/secretkey -r ${{ secrets.SSH_USER_PRODUCTION }}@${{ secrets.SSH_HOST_PRODUCTION }}:~/deploy/backup/sumutokoro2022/current/backup.zip ./backup/backup.zip

      - name: バックアップサーバーにバックアップファイルを転送
        run: |
          scp -i ~/.ssh/backup_secretkey ./backup/backup.zip ${{ secrets.SSH_USER_BACKUP }}@${{ secrets.SSH_HOST_BACKUP }}:~/backup/sumutokoro/backup_`date +%Y%m`.zip
          scp -i ~/.ssh/backup_secretkey ./backup/backup.zip ${{ secrets.SSH_USER_BACKUP }}@${{ secrets.SSH_HOST_BACKUP }}:~/backup/sumutokoro/backup_latest.zip
          scp -i ~/.ssh/backup_secretkey ./backup/backup.zip ${{ secrets.SSH_USER_BACKUP }}@${{ secrets.SSH_HOST_BACKUP }}:~/backup/sumutokoro/month/backup_`date +%d`.zip


