name: ステージングサーバへのデプロイ

on:
  push:
    branches:
      - develop

jobs:

  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: 下準備
        run: mkdir -p ~/.ssh

      - name: docker-compose準備・起動
        run: |
          rm docker-compose.yml
          cp system/docker/x86/docker-compose.yml ./
          docker-compose up -d

      - name: キャッシュディレクトリ設定
        run: |
          mkdir bootstrap/cache
          chmod -R 707 bootstrap/cache
          chmod -R 707 storage

      #- name: envファイル設定
      #  run: |
      #    cp system/ci/env ./.env
      #    cp system/ci/env.dusk ./.env.dusk

      - name: 本番環境で使うファイルを移動
        run: |
          cp system/production/.htaccess ./.htaccess
          cp system/production/php.ini ./php.ini

      #- name: デプロイファイル準備
      #  run: |
      #    cp system/deployer/deploy.php ./
      #    cp system/deployer/servers.yml ./

      - name: composerインストール
        run: docker-compose exec -T php sh -c "composer install"

      - name: "Prepare SSH key and known hosts"
        run: |
          echo "${{ secrets.SSH_KEY_STAGING }}" > ~/.ssh/secretkey
          chmod 600 ~/.ssh/secretkey
          ssh-keyscan ${{ secrets.SSH_HOST_STAGING }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY_STAGING }}

      - name: Setup tmate session -y
        uses: mxschmitt/action-tmate@v1

      # WEBアプリのユニットテストを行う
      #- name: apps Unit testing (PHPUnit)
      #  run: |
      #    docker-compose exec -T php ./vendor/bin/phpunit

      # WEBアプリのE2Eテストを行う
      #- name: apps E2E testing (Laravel Dusk)
      #  run: |
      #     docker-compose exec -T php php artisan dusk

      #- name: デプロイ用のcomposerに切り替えて、composerをセットし直す（#環境をproductionにする必要があるので、.envを差し替え）
      #  run: |
      #    docker-compose exec -T php sh -c "composer update --no-dev"

      - name: デプロイを行う（deployer）
        run: ./vendor/bin/dep deploy staging -vvvv

